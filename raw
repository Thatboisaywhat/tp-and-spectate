local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

local gyro, align, rayLoop
local root = nil

local function enableWallWalk()
    local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    root = character:WaitForChild("HumanoidRootPart", 5)
    if not root then return end

    gyro = Instance.new("BodyGyro")
    gyro.MaxTorque = Vector3.new(400000, 400000, 400000)
    gyro.P = 10000
    gyro.CFrame = root.CFrame
    gyro.Parent = root

    align = Instance.new("AlignOrientation")
    align.Mode = Enum.OrientationAlignmentMode.OneAttachment
    align.RigidityEnabled = true
    align.Responsiveness = 200
    align.Parent = root

    local att = Instance.new("Attachment")
    att.Parent = root
    align.Attachment0 = att

    rayLoop = RunService.RenderStepped:Connect(function()
        local rayParams = RaycastParams.new()
        rayParams.FilterDescendantsInstances = {character}
        rayParams.FilterType = Enum.RaycastFilterType.Blacklist

        local origin = root.Position
        local direction = root.CFrame.LookVector * 5
        local result = workspace:Raycast(origin, direction, rayParams)

        if result then
            local normal = result.Normal
            local surfaceCFrame = CFrame.lookAt(root.Position, root.Position + normal)
            gyro.CFrame = surfaceCFrame

            local moveVec = Vector3.zero
            if UIS:IsKeyDown(Enum.KeyCode.W) then moveVec += surfaceCFrame.RightVector end
            if UIS:IsKeyDown(Enum.KeyCode.S) then moveVec -= surfaceCFrame.RightVector end
            if UIS:IsKeyDown(Enum.KeyCode.A) then moveVec -= surfaceCFrame.UpVector end
            if UIS:IsKeyDown(Enum.KeyCode.D) then moveVec += surfaceCFrame.UpVector end

            root.Velocity = moveVec.Unit * 20
        end
    end)
end

local function disableWallWalk()
    if gyro then gyro:Destroy() end
    if align then align:Destroy() end
    if rayLoop then rayLoop:Disconnect() end
end

InteractionTab:CreateToggle({
    Name = "üßó‚Äç‚ôÇÔ∏è Wall Walk",
    CurrentValue = false,
    Flag = "WallWalkToggle",
    Callback = function(enabled)
        if enabled then
            enableWallWalk()
        else
            disableWallWalk()
        end
    end,
})
